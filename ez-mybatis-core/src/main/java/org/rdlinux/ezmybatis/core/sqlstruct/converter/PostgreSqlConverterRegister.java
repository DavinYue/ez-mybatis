package org.rdlinux.ezmybatis.core.sqlstruct.converter;

import org.rdlinux.ezmybatis.constant.DbType;
import org.rdlinux.ezmybatis.core.EzMybatisContent;
import org.rdlinux.ezmybatis.core.EzQuery;
import org.rdlinux.ezmybatis.core.sqlstruct.*;
import org.rdlinux.ezmybatis.core.sqlstruct.arg.*;
import org.rdlinux.ezmybatis.core.sqlstruct.condition.GroupCondition;
import org.rdlinux.ezmybatis.core.sqlstruct.condition.between.*;
import org.rdlinux.ezmybatis.core.sqlstruct.condition.compare.*;
import org.rdlinux.ezmybatis.core.sqlstruct.condition.nil.*;
import org.rdlinux.ezmybatis.core.sqlstruct.condition.normal.NormalAliasCondition;
import org.rdlinux.ezmybatis.core.sqlstruct.condition.normal.NormalColumnCondition;
import org.rdlinux.ezmybatis.core.sqlstruct.condition.normal.NormalFieldCondition;
import org.rdlinux.ezmybatis.core.sqlstruct.condition.normal.SqlCondition;
import org.rdlinux.ezmybatis.core.sqlstruct.converter.mysql.*;
import org.rdlinux.ezmybatis.core.sqlstruct.converter.mysql.arg.*;
import org.rdlinux.ezmybatis.core.sqlstruct.converter.postgre.*;
import org.rdlinux.ezmybatis.core.sqlstruct.formula.*;
import org.rdlinux.ezmybatis.core.sqlstruct.selectitem.*;
import org.rdlinux.ezmybatis.core.sqlstruct.table.DbTable;
import org.rdlinux.ezmybatis.core.sqlstruct.table.EntityTable;
import org.rdlinux.ezmybatis.core.sqlstruct.table.EzQueryTable;
import org.rdlinux.ezmybatis.core.sqlstruct.table.SqlTable;
import org.rdlinux.ezmybatis.core.sqlstruct.table.partition.NormalPartition;
import org.rdlinux.ezmybatis.core.sqlstruct.table.partition.SubPartition;
import org.rdlinux.ezmybatis.core.sqlstruct.update.*;

/**
 * mysql转换器注册
 */
public class PostgreSqlConverterRegister {
    public static void register() {
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, Where.class, MySqlWhereConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, Having.class, MySqlHavingConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, Join.class, MySqlJoinConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, From.class, MySqlFromConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, OrderBy.class, MySqlOrderByConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, OrderBy.OrderItem.class, MySqlOrderItemConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, Select.class, MySqlSelectConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, GroupBy.class, MySqlGroupByConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, GroupBy.GroupItem.class, MySqlGroupItemConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, Limit.class, PostgreSqlLimitConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, NormalPartition.class, MySqlNormalPartitionConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, SubPartition.class, MySqlSubPartitionConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, DbTable.class, MySqlDbTableConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, EntityTable.class, MySqlEntityTableConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, EzQueryTable.class, MySqlEzQueryTableConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, SqlTable.class, MySqlSqlTableConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, CaseWhen.class, MySqlCaseWhenConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, SelectCaseWhen.class, MySqlSelectCaseWhenConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, SelectAllItem.class, MySqlSelectAllItemConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, SelectAvgColumn.class, MySqlSelectAvgColumnConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, SelectColumn.class, MySqlSelectColumnConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, SelectAvgField.class, MySqlSelectAvgFieldConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, SelectCountField.class, MySqlSelectCountFieldConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, SelectCountColumn.class, MySqlSelectCountColumnConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, SelectField.class, MySqlSelectFieldConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, SelectMaxColumn.class, MySqlSelectMaxColumnConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, SelectMaxField.class, MySqlSelectMaxFieldConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, SelectMinColumn.class, MySqlSelectMinColumnConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, SelectMinField.class, MySqlSelectMinFieldConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, SelectSumColumn.class, MySqlSelectSumColumnConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, SelectSumField.class, MySqlSelectSumFieldConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, SelectTableAllItem.class, MySqlSelectTableAllItemConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, SelectKeywords.class, MySqlSelectKeywordsConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, CaseWhenUpdateColumnItem.class, PostgreSqlCaseWhenUpdateColumnItemConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, CaseWhenUpdateFieldItem.class, PostgreSqlCaseWhenUpdateFieldItemConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, UpdateColumnItem.class, PostgreSqlUpdateColumnItemConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, UpdateFieldItem.class, PostgreSqlUpdateFieldItemConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, FunctionUpdateFieldItem.class, PostgreSqlFunctionUpdateFieldItemConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, FunctionUpdateColumnItem.class, PostgreSqlFunctionUpdateColumnItemConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, FormulaUpdateFieldItem.class, PostgreSqlFormulaUpdateFieldItemConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, FormulaUpdateColumnItem.class, PostgreSqlFormulaUpdateColumnItemConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, KeywordsUpdateFieldItem.class, PostgreSqlKeywordsUpdateFieldItemConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, KeywordsUpdateColumnItem.class, PostgreSqlKeywordsUpdateColumnItemConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, BetweenAliasCondition.class, MySqlBetweenAliasConditionConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, NotBetweenAliasCondition.class, MySqlNotBetweenAliasConditionConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, BetweenColumnCondition.class, MySqlBetweenColumnConditionConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, NotBetweenColumnCondition.class, MySqlNotBetweenColumnConditionConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, BetweenFieldCondition.class, MySqlBetweenFieldConditionConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, NotBetweenFieldCondition.class, MySqlNotBetweenFieldConditionConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, AliasCompareCondition.class, MySqlAliasCompareConditionConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, ColumnCompareCondition.class, MySqlColumnCompareConditionConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, FieldCompareCondition.class, MySqlFieldCompareConditionConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, ColumnCompareFieldCondition.class, MySqlColumnCompareFieldConditionConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, FieldCompareColumnCondition.class, MySqlFieldCompareColumnConditionConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, SqlCondition.class, MySqlSqlConditionConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, GroupCondition.class, MySqlGroupConditionConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, IsNullAliasCondition.class, MySqlIsNullAliasConditionConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, IsNotNullAliasCondition.class, MySqlIsNotNullAliasConditionConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, IsNullFieldCondition.class, MySqlIsNullFieldConditionConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, IsNotNullFiledCondition.class, MySqlIsNotNullFieldConditionConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, IsNullColumnCondition.class, MySqlIsNullColumnConditionConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, IsNotNullColumnCondition.class, MySqlIsNotNullColumnConditionConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, NormalFieldCondition.class, PostgreSqlNormalFieldConditionConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, NormalColumnCondition.class, PostgreSqlNormalColumnConditionConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, NormalAliasCondition.class, PostgreSqlNormalAliasConditionConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, EzQuery.class, MySqlEzQueryConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, Function.class, MySqlFunctionConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, Formula.class, MySqlFormulaConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, GroupFormulaElement.class, MySqlGroupFormulaElementConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, ColumnFormulaElement.class, MySqlColumnFormulaElementConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, FieldFormulaElement.class, MySqlFieldFormulaElementConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, FunFormulaElement.class, MySqlFunFormulaElementConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, FormulaFormulaElement.class, MySqlFormulaFormulaElementConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, CaseWhenFormulaElement.class, MySqlCaseWhenFormulaElementConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, ValueFormulaElement.class, MySqlValueFormulaElementConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, KeywordsFormulaElement.class, MySqlKeywordsFormulaElementConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, Union.class, MySqlUnionConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, SelectFormula.class, MySqlSelectFormulaConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, SelectFunction.class, MySqlSelectFunctionConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, SelectValue.class, MySqlSelectValueConverter.getInstance());
        //argConverter
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, AliasArg.class, MySqlAliasArgConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, CaseWhenArg.class, MySqlCaseWhenArgConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, ColumnArg.class, MySqlColumnArgConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, FieldArg.class, MySqlFieldArgConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, FormulaArg.class, MySqlFormulaArgConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, FunctionArg.class, MySqlFunctionArgConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, KeywordsArg.class, MySqlKeywordsArgConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, ObjArg.class, MySqlObjArgConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, SqlArg.class, MySqlSqlArgConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, EzQueryArg.class, MySqlEzQueryArgConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, FormulaCompareArgCondition.class, PostgreSqlFormulaCompareArgConditionConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, FunctionCompareArgCondition.class, MySqlFunctionCompareArgConditionConverter.getInstance());
        EzMybatisContent.addConverter(DbType.POSTGRE_SQL, CaseWhenCompareArgCondition.class, PostgreSqlCaseWhenCompareArgConditionConverter.getInstance());
    }
}
